{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAM,gCAAU,CAAC;IACf,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,eAAO,EAAE,IAAM,EAAE;IACzC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,eAAO,EAAE,IAAM,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,eAAO,EAAE,EAAE;IAEzC,MAAM,WAAW,CAAC;QAChB,QAAQ;QACR,MAAM,OAAO,EAAE;QACf,MAAM,QAAQ,EAAE;QAChB,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM;YAC1C,qBAAqB;YACrB,OAAO,IAAI,CAAC,KAAK;gBACf,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC;gBACjC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG;YACrB;QACF;QACA,QAAQ;QACR,gDAAgD;QAChD,WAAW;IAEb;IAEA,CAAA,GAAA,gBAAQ,EAAE;QACR,WAAW,MAAM,MAAM,EAAE,SAAS,IAAI,CAAA,IAAM,CAAA;gBAAE,QAAQ,EAAE,KAAK;gBAAE,aAAa,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;YAAA,CAAA,MAAO,EAAE;QAC1G,MAAM,OAAM,EAAE;QACd,CAAA,GAAA,cAAQ,EAAE,GAAG,CAAC,MAAM,MAAM,EAAE,OAAO,CAAC;YAClC,IAAI,GAAG,CAAC,CAAA;gBACN,MAAM,MAAM,CAAC;gBACb,MAAM,MAAM,EAAE,SAAS,IAAI,CAAA,IAAK,GAAG,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;gBACrF,KAAK,IAAI,CAAC;YACZ;YACA,QAAQ;QACV;IACA,sCAAsC;IACxC,GAAG;QAAC,MAAM,MAAM;KAAC;IACjB,qBAAO,gBAAC;QAAI,OAAO;YAAE,UAAU;YAAqB,UAAU;QAAO;kBACnE,cAAA,gBAAC,CAAA,GAAA,yBAAiB;YAAE,SAAS;YAAS,MAAM;YAAM,mBAAmB;gBACnE,IAAI,IAAO,CAAA;wBACT,yBAAyB;4BACvB,iBAAiB;wBACnB;oBACF,CAAA;YACF;;;AAGJ;IAEA,2CAAe","sources":["component/Table.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport {MaterialReactTable} from 'material-react-table';\r\nimport Variables from '../Variables'\r\n\r\nconst Example = (props) => {\r\n  const [data, setData] = useState(() => [])\r\n  const [rows, setRows] = useState(() => [])\r\n  const [columns, setColumns] = useState([])\r\n\r\n  const loadData = (_da) => {\r\n    setData(_da)\r\n    const rows = []\r\n    const _cols = []\r\n    _da && Object.entries(_da).map(([col, _rows]) => {\r\n      // console.log(_rows)\r\n      _rows?.map((row, index) => {\r\n        if (!rows[index]) rows[index] = {}\r\n        rows[index][col] = row\r\n      })\r\n    })\r\n    setRows(rows)\r\n    // console.log(\"End loading table\", _cols, rows)\r\n    setColumns(_cols)\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setColumns(props.custom?.columns?.map(c => ({ header: c.label, accessorKey: c.value.split('.')[1]})) || [])\r\n    const rows= []\r\n    Variables.get(props.custom?.table, (res) => {\r\n      res.map(r => {\r\n        const row = {}\r\n        props.custom?.columns?.map(c => row[c.value.split('.')[1]] = r[c.value.split('.')[1]])\r\n        rows.push(row)\r\n      })\r\n      setRows(rows) \r\n    })\r\n    // parseContent(props.items, loadData)\r\n  }, [props.custom])\r\n  return <div style={{ maxWidth: 'calc(100vw - 0px)', overflow: 'auto' }}>\r\n    <MaterialReactTable columns={columns} data={rows} muiTableBodyProps={{\r\n      sx: () => ({\r\n        '& tr:nth-of-type(odd)': {\r\n          backgroundColor: 'lightgray'\r\n        }\r\n      })\r\n    }}\r\n    />\r\n  </div>\r\n};\r\n\r\nexport default Example;\r\n"],"names":[],"version":3,"file":"Table.27ac4d6d.js.map"}